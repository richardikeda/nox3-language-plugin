{
  parserClass="com.enterscript.nox3languageplugin.language.psi.impl.parser.NOX3Parser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="NOX3"
  psiImplClassSuffix="Impl"
  psiPackage="com.enterscript.nox3languageplugin.language.psi"
  psiImplPackage="com.enterscript.nox3languageplugin.language.psi.impl"

  elementTypeHolderClass="com.enterscript.nox3languageplugin.language.psi.NOX3Types"
  elementTypeClass="com.enterscript.nox3languageplugin.language.psi.NOX3ElementType"
  tokenTypeClass="com.enterscript.nox3languageplugin.language.psi.NOX3TokenType"

  psiImplUtilClass="com.enterscript.nox3languageplugin.language.psi.impl.NOX3PsiImplUtil"
}

file ::= element_*

private element_ ::= (property | if_statement | for_statement | case_statement | repeat_statement | COMMENT | CRLF)

property ::= IDENTIFIER SEPARATOR value {
    mixin="com.enterscript.nox3languageplugin.language.psi.impl.NOX3NamedElementImpl"
    implements="com.enterscript.nox3languageplugin.language.psi.NOX3NamedElement"
    methods=[getKey getValue getName setName getNameIdentifier]
}

if_statement ::= IF expression CRLF element_* ENDIF

for_statement ::= FOR IDENTIFIER SEPARATOR expression TO expression CRLF element_* ENDFOR

case_statement ::= CASE expression CRLF (WHEN expression CRLF element_*)+ ENDCASE

repeat_statement ::= REPEAT CRLF element_* UNTIL expression

value ::= expression

function_call ::= (IDENTIFIER | PRINT | LEN | SQRT) '(' expression? ')'

expression ::= NUMBER | STRING | IDENTIFIER | USER | SYSDATE | function_call
